{"version":3,"file":"./dist/index.js","sources":["webpack:///webpack/bootstrap 335f84770aa96fcbe203","webpack:///lib/index.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 335f84770aa96fcbe203","import React from 'react';\n\n\nconst DOMParser = typeof window !== 'undefined' && window.DOMParser;\nconst process = process || {};\n      process.env = process.env || {};\nconst parserAvailable = typeof DOMParser !== 'undefined' &&\n                        DOMParser.prototype != null &&\n                        DOMParser.prototype.parseFromString != null;\n\nfunction isParsable(src) {\n    // kinda naive but meh, ain't gonna use full-blown parser for this\n    return parserAvailable &&\n           typeof src === 'string' &&\n           src.trim().substr(0, 4) === '<svg';\n}\n\n// parse SVG string using `DOMParser`\nfunction parseFromSVGString(src) {\n    const parser = new DOMParser();\n    return parser.parseFromString(src, \"image/svg+xml\");\n}\n\n// Transform DOM prop/attr names applicable to `<svg>` element but react-limited\nfunction switchSVGAttrToReactProp(propName) {\n    switch (propName) {\n    case 'class':     return 'className';\n    default:          return propName;\n    }\n}\n\nexport default class InlineSVG extends React.Component {\n    static defaultProps = {\n        element: 'i',\n        raw: false,\n        src: ''\n    };\n    static propTypes = {\n        src: React.PropTypes.string.isRequired,\n        element: React.PropTypes.string,\n        raw: React.PropTypes.bool\n    };\n\n    constructor(props) {\n        super(props);\n        this._extractSVGProps = this._extractSVGProps.bind(this);\n    }\n\n    // Serialize `Attr` objects in `NamedNodeMap`\n    _serializeAttrs(map) {\n        const ret = {};\n        let prop;\n        for (let i = 0; i < map.length; i++) {\n            prop = switchSVGAttrToReactProp(map[i].name);\n            ret[prop] = map[i].value;\n        }\n        return ret;\n    }\n\n    // get <svg /> element props\n    _extractSVGProps(src) {\n        const map = parseFromSVGString(src).documentElement.attributes;\n        return (map.length > 0) ? this._serializeAttrs(map) : null;\n    }\n\n    // get content inside <svg> element.\n    _stripSVG(src) {\n        return parseFromSVGString(src).documentElement.innerHTML;\n    }\n\n    componentWillReceiveProps({ children }) {\n        if (\"production\" !== process.env.NODE_ENV && children != null) {\n            console.info('<InlineSVG />: `children` prop will be ignored.');\n        }\n    }\n\n    render() {\n        let Element, __html, svgProps;\n        const { element, raw, src, ...otherProps } = this.props;\n\n        if (raw === true && isParsable(src)) {\n            Element = 'svg';\n            svgProps = this._extractSVGProps(src);\n            __html = this._stripSVG(src);\n        }\n        __html = __html || src;\n        Element = Element || element;\n        svgProps = svgProps || {};\n\n        return <Element {...svgProps} {...otherProps} src={null} children={null}\n                        dangerouslySetInnerHTML={{ __html }} />\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/index.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAIA;AACA;AACA;;;AAYA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA5DA;AACA;AADA;AAEA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AAHA;AANA;;;","sourceRoot":""}